upstream backend_ai {
    server backend:8000;
}

server {
    listen 80;
    server_name test.serenus.one;

    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;  # Enable HTTP/2 for better performance
    server_name test.serenus.one;

    # SSL settings provided by Certbot
    ssl_certificate /etc/letsencrypt/live/test.serenus.one/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/test.serenus.one/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Add HSTS header for additional security (enforces HTTPS)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    location / {
        proxy_pass http://backend_ai;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
